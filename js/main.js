/*Структура объекта:
id, число — идентификатор опубликованной фотографии. Это число от 1 до 25. Идентификаторы не должны повторяться.
url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.
description, строка — описание фотографии. Описание придумайте самостоятельно.
likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.
comments, массив объектов — список комментариев, оставленных другими пользователями к этой фотографии. Количество комментариев к каждой фотографии вы определяете на своё усмотрение. Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:
  {
    id: 135,
    avatar: 'img/avatar-6.svg',
    message: 'В целом всё неплохо. Но не всё.',
    name: 'Артём',
  }
  У каждого комментария есть идентификатор — id — любое число. Идентификаторы не должны повторяться.
  Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.
  // Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:
  //   Всё отлично!
  //   В целом всё неплохо. Но не всё.
  //   Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
  //   Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
  //   Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
  //   Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!
  // Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name.*/

const MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
];

const NAMES = [
  'Иван',
  'Хуан Себастьян',
  'Мария',
  'Кристоф',
  'Виктор',
  'Юлия',
  'Люпита',
  'Вашингтон',
  'да Марья',
  'Верон',
  'Мирабелла',
  'Вальц',
  'Онопко',
  'Топольницкая',
  'Нионго',
  'Ирвинг'
];

const createIdGenerator = (start) => {
  let count = start;

  return function () {
    count += 1;
    return count;
  };
};

const generatePhotoId = createIdGenerator(0);
const generateCommentId = createIdGenerator(25);

// Функция arrayRandElement(arr) для получения случайного элемента массива, которая
// принимает в качестве параметра один массив, а
// возвращает его случайное значение.
// Массив:
// var arr = ['PHP', 'JavaScript', 'Python', 'Perl', 'Ruby', 'Go', 'Java'];
// alert(arrayRandElement(arr));// Выведет, например: Python
const arrayRandElement = (array) => {
  const rand = Math.floor(Math.random() * array.length);
  return array[rand];
};

// Функцию-генератор для получения уникальных целых чисел
// из указанного диапазона
const getRandomInteger = (min, max) => {
  const lower = Math.ceil(Math.min(Math.abs(min), Math.abs(max)));
  const upper = Math.floor(Math.max(Math.abs(min), Math.abs(max)));
  const result = Math.random() * (upper - lower + 1) + lower;

  return Math.floor(result);
};

// Функцию-генератор комментария
const generateCommentObject = () => {
  return {
    id: generateCommentId(),
    avatar: 'img/avatar-' + getRandomInteger(1, 6) + '.svg',
    message: arrayRandElement(MESSAGES),
    name: arrayRandElement(NAMES)
  };
};

const ammountCommentsObject = getRandomInteger(1, 25); // Количество комментариев в одном объекте

// Функцию-генератор массива комментариев
const commentsArray = Array.from({length: ammountCommentsObject}, generateCommentObject);

const generateObject = () => {
  const objectId = generatePhotoId();

  return {
    id: objectId(),
    url: 'photos/' + objectId() + '.jpg',
    description: '',
    likes: getRandomInteger(15, 200),
    comments: commentsArray
  };
};

const objectsArray = Array.from({length: 25}, generateObject);
