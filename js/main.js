/*Структура объекта:
id, число — идентификатор опубликованной фотографии. Это число от 1 до 25. Идентификаторы не должны повторяться.
url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.
description, строка — описание фотографии. Описание придумайте самостоятельно.
likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.
comments, массив объектов — список комментариев, оставленных другими пользователями к этой фотографии. Количество комментариев к
каждой фотографии вы определяете на своё усмотрение. Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:
  {
    id: 135,
    avatar: 'img/avatar-6.svg',
    message: 'В целом всё неплохо. Но не всё.',
    name: 'Артём',
  }
  У каждого комментария есть идентификатор — id — любое число. Идентификаторы не должны повторяться.
  Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.
  // Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:
  //   Всё отлично!
  //   В целом всё неплохо. Но не всё.
  //   Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
  //   Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
  //   Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
  //   Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!
  // Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name.*/

const AMOUNT_PHOTO = 25;
const MAX_AMOUNT_COMMENTS_IN_OBJECT = 10;

const DESCRIPTIONS = [
  'описание фотографии 1',
  'описание фотографии 2',
  'описание фотографии 3',
  'описание фотографии 4',
  'описание фотографии 5',
  'описание фотографии 6',
  'описание фотографии 7',
  'описание фотографии 8',
  'описание фотографии 9',
  'описание фотографии 10',
  'описание фотографии 11',
  'описание фотографии 12',
  'описание фотографии 13',
  'описание фотографии 14',
  'описание фотографии 15',
  'описание фотографии 16',
  'описание фотографии 17',
  'описание фотографии 18',
  'описание фотографии 19',
  'описание фотографии 20',
  'описание фотографии 21',
  'описание фотографии 22',
  'описание фотографии 23',
  'описание фотографии 24',
  'описание фотографии 25'
];

const MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
];

const NAMES = [
  'Иван',
  'Хуан Себастьян',
  'Мария',
  'Кристоф',
  'Виктор',
  'Юлия',
  'Люпита',
  'Вашингтон',
  'да Марья',
  'Верон',
  'Мирабелла',
  'Вальц',
  'Онопко',
  'Топольницкая',
  'Нионго',
  'Ирвинг'
];

//Функция генерации уникальных идентификаторов
function createIdGenerator (start) {
  let lastGeneratedId = start;

  return function () {
    lastGeneratedId += 1;
    return lastGeneratedId;
  };
}

const generateObjectId = createIdGenerator(0);
const generateCommentId = createIdGenerator(AMOUNT_PHOTO);

// Функциz генерации для получения уникальных целых чисел из указанного диапазона
const getRandomInteger = (min, max) => {
  const lower = Math.ceil(Math.min(Math.abs(min), Math.abs(max)));
  const upper = Math.floor(Math.max(Math.abs(min), Math.abs(max)));
  const result = Math.random() * (upper - lower + 1) + lower;

  return Math.floor(result);
};

// Функция для получения случайного элемента массива, которая
// принимает в качестве параметра один массив, а
// возвращает его случайное значение.
const arrayRandElement = (array) => array[getRandomInteger(0, array.length - 1)];

// Функцию-генератор комментария
const generateCommentObject = () => ({
  id: generateCommentId(),
  avatar: `img/avatar-${getRandomInteger(1, 6)}.svg`,
  message: Array.from({length: getRandomInteger(1, 2)}, () => arrayRandElement(MESSAGES)).join(' '),
  name: arrayRandElement(NAMES)
});

// Функция генератор объекта
const generateObject = (objectId) => ({
  id: objectId,
  url: `photos/${objectId}.jpg`,
  description: arrayRandElement(DESCRIPTIONS),
  likes: getRandomInteger(15, 200),
  comments: Array.from({length: MAX_AMOUNT_COMMENTS_IN_OBJECT}, () => generateCommentObject())
});

// Массив объектов
const objectsArray = Array.from({length: AMOUNT_PHOTO}, () => generateObject(generateObjectId()));

// Вызов функции только для исключения ошибки в линтере
objectsArray();
